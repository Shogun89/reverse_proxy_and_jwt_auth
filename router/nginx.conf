events {
    worker_connections 1024;
}

http {
    # Add resolver for Docker DNS
    resolver 127.0.0.11 valid=30s;

    # Enable debug logging
    error_log /dev/stdout debug;
    
    log_format debug_format '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          'request_uri="$request_uri" '
                          'uri="$uri" '
                          'args="$args" '
                          'backend_server="$backend_server"';
    
    # JWT token extraction
    map $http_authorization $jwt_payload {
        "~^Bearer (.+)$" $1;
        default "";
    }

    # Shard routing based on user_id
    map $user_id $backend_server {
        "~^[13579]" "api-b:8000";  # Odd IDs go to shard B
        default "api-a:8000";       # Even IDs go to shard A
    }

    server {
        listen 80;
        
        # Auth service endpoints
        location /authentication/ {
            proxy_pass http://auth:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Original-URI $request_uri;
        }
        
        # Backend API endpoints
        location /backend/ {
            auth_request /_validate_token;
            auth_request_set $user_id $upstream_http_x_user_id;
            
            # Log the incoming request and where we're proxying to
            access_log /dev/stdout debug_format;
            error_log /dev/stdout debug;
            
            # After validation, route based on user_id
            rewrite ^/backend/(.*) /$1 break;
            proxy_pass http://$backend_server;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Forwarded-Prefix /backend;
            
            # Add debug headers to response
            add_header X-Debug-Backend-Server $backend_server;
            add_header X-Debug-Original-URI $request_uri;
            add_header X-Debug-URI $uri;
        }

        location = /_validate_token {
            internal;
            proxy_pass http://auth:8000/auth/verify;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
        }
    }
} 